import React, { useState } from "react";
import { FaArrowLeft, FaRedoAlt } from "react-icons/fa";

// Common styles
const fontFamily = "font-[Comfortaa]";

// Components
const Card = ({ children, className }) => (
  <div className={`rounded-lg shadow-lg p-4 bg-white ${className}`}>{children}</div>
);

const CardHeader = ({ children, className }) => (
  <div className={`border-b pb-2 mb-4 ${className}`}>{children}</div>
);

const CardTitle = ({ children, className }) => (
  <h2 className={`text-lg font-bold ${className}`}>{children}</h2>
);

const CardContent = ({ children, className }) => (
  <div className={`text-sm ${className}`}>{children}</div>
);

const CardFooter = ({ children, className }) => (
  <div className={`border-t pt-2 mt-4 ${className}`}>{children}</div>
);

const Button = ({ children, onClick, className, disabled, gender }) => {
  const getButtonStyles = (gender) => {
    if (gender === "male") {
      return {
        bgColor: "bg-blue-500",
        hoverColor: "hover:bg-blue-600",
        textColor: "text-white",
      };
    }
    // Default to female styles
    return {
      bgColor: "bg-pink-300",
      hoverColor: "hover:bg-pink-600",
      textColor: "text-white",
    };
  };

  const styles = getButtonStyles(gender);

  return (
    <button
  onClick={onClick}
  disabled={disabled}
  className={`px-4 py-2 rounded-lg bg-white font-medium transition-all duration-300 
    ${disabled
      ? "bg-gray-300 cursor-not-allowed"
      : `hover:scale-105 hover:shadow-lg ${styles.textColor}`
    } 
    ${className}`}
>
  {children}
</button>
  );
};

// Questions for both genders
const questions = {
  female: [
    {
      question: "–£ –≤–∞—Å —Å–∏–ª—å–Ω–∞—è –•–∞—Ä–∏–∑–º–∞, —Å –∫–∞–∫–∏–º —Ü–≤–µ—Ç–∫–æ–º –≤—ã —Å–µ–±—è –∞—Å—Å–æ—Ü–∏–∏—Ä–æ–≤–∞–ª–∏?",
      options: [
        "–ê–ª–æ–π —Ä–æ–∑–æ–π ‚Äî —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Å—Ç—å, —Å–∏–ª—É –∏ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ —Å–≤–æ–µ–π —è—Ä–∫–æ—Å—Ç—å—é –∏ –º–∞–≥–Ω–µ—Ç–∏–∑–º–æ–º.",
        "–ß–µ—Ä–Ω–æ–π –æ—Ä—Ö–∏–¥–µ–µ–π ‚Äî –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å, —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å –∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å, –ø—Ä–∏—Ç—è–≥–∏–≤–∞—è –≤–∑–≥–ª—è–¥—ã —Å–≤–æ–µ–π –Ω–µ–æ–±—ã—á–Ω–æ—Å—Ç—å—é.",
      ],
    },
    {
      question: "–í—ã ‚Äî ladyboss, —Å –∫–∞–∫–∏–º —Ü–≤–µ—Ç–∫–æ–º –≤—ã —Å–µ–±—è –∞—Å—Å–æ—Ü–∏–∏—Ä–æ–≤–∞–ª–∏?",
      options: [
        "–ß—ë—Ä–Ω–æ–π —Ä–æ–∑–æ–π ‚Äî —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏–ª—É, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –Ω–µ–ø–æ–∫–æ—Ä–Ω–æ—Å—Ç—å, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—è –≤–∞—à—É –≤–ª–∞—Å—Ç—å –∏ —Ä–µ—à–∏–º–æ—Å—Ç—å.",
        "–ê–ª–æ–π –æ—Ä—Ö–∏–¥–µ–µ–π ‚Äî –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å, —Å—Ç—Ä–∞—Å—Ç—å –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å, –ø—Ä–∏ —ç—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω—è—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∏ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ.",
      ],
    },
    {
      question: "‚Å†–í—ã ‚Äî –æ—á–µ–Ω—å —á—É–≤—Å—Ç–≤–µ–Ω–Ω–∞—è, —Å –∫–∞–∫–∏–º —Ü–≤–µ—Ç–∫–æ–º –≤—ã —Å–µ–±—è –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç–µ?",
      options: [
        "–ö—Ä–∞—Å–Ω–æ–π —Ä–æ–∑–æ–π ‚Äî —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Å—Ç—å, —ç–º–æ—Ü–∏–∏ –∏ –≥–ª—É–±–æ–∫–∏–µ —á—É–≤—Å—Ç–≤–∞, –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è—è –≤–∞—à—É –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –∏ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å.",
        "–ü—É—Ä–ø—É—Ä–Ω–æ–π –æ—Ä—Ö–∏–¥–µ–µ–π ‚Äî –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —Å —Ç–∞–π–Ω–æ–π, —Å–æ–±–ª–∞–∑–Ω–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∏ –∏–∑—ã—Å–∫–∞–Ω–Ω–æ–π –∫—Ä–∞—Å–æ—Ç–æ–π, –æ—Ç—Ä–∞–∂–∞—è –≤–∞—à—É —á—É–≤—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ —É—Ç–æ–Ω—á–µ–Ω–Ω–æ—Å—Ç—å.",
      ],
    },
    {
      question: "–í—ã ‚Äî –Ω–µ–∂–Ω–∞—è –Ω–∞—Ç—É—Ä–∞, —Å –∫–∞–∫–∏–º —Ü–≤–µ—Ç–∫–æ–º –≤—ã —Å–µ–±—è –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç–µ?",
      options: [
        "–ë–µ–ª–æ–π –ª–∏–ª–∏–µ–π ‚Äî —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —á–∏—Å—Ç–æ—Ç—É, –∏–∑—ã—Å–∫–∞–Ω–Ω–æ—Å—Ç—å –∏ —É—Ç–æ–Ω—á–µ–Ω–Ω—É—é –∫—Ä–∞—Å–æ—Ç—É, –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è—è –≤–∞—à—É –º—è–≥–∫–æ—Å—Ç—å –∏ –Ω–µ–≤–∏–Ω–Ω–æ—Å—Ç—å.",
        "–†–æ–∑–æ–≤–æ–π –ø–∏–æ–Ω–æ–π ‚Äî –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç –Ω–µ–∂–Ω–æ—Å—Ç—å, —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å –∏ –¥—É—à–µ–≤–Ω—É—é —Ç–µ–ø–ª–æ—Ç—É, –æ—Ç—Ä–∞–∂–∞—è –≤–∞—à—É –∑–∞–±–æ—Ç–ª–∏–≤–æ—Å—Ç—å –∏ –º—è–≥–∫–æ—Å—Ç—å.",
      ],
    },
    {
      question: "–í—ã ‚Äî –æ—á–µ–Ω—å –º–∏–ª–æ—Å–µ—Ä–¥–Ω–∞—è, —Å –∫–∞–∫–∏–º —Ü–≤–µ—Ç–∫–æ–º –≤—ã —Å–µ–±—è –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç–µ?",
      options: [
        "–ë–µ–ª–æ–π —Ä–æ–∑–æ–π ‚Äî —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —á–∏—Å—Ç–æ—Ç—É, –¥–æ–±—Ä–æ—Ç—É –∏ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ, –æ—Ç—Ä–∞–∂–∞—è –≤–∞—à—É –∏—Å–∫—Ä–µ–Ω–Ω—é—é –∑–∞–±–æ—Ç—É –æ –¥—Ä—É–≥–∏—Ö.",
        "–ü–∏–æ–Ω ‚Äî –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ, –∏—Å—Ü–µ–ª–µ–Ω–∏–µ –∏ –≥–∞—Ä–º–æ–Ω–∏—é, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—è –≤–∞—à—É —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —É—Ç–µ—à–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
      ],
    },
  ],
  male: [
    {
      question: "–ï—Å–ª–∏ –±—ã –≤–∞—à–∞ –º—É–∂—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è –±—ã–ª–∞ —Ü–≤–µ—Ç–∫–æ–º, –∫–∞–∫–∏–º –±—ã —Ü–≤–µ—Ç–∫–æ–º –≤—ã —Å—Ç–∞–ª–∏?",
      options: [
        "–ö—Ä–∞—Å–Ω–æ–π —Ä–æ–∑–æ–π ‚Äî —Å—Ç—Ä–∞—Å—Ç–Ω–æ–π –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ–π.",
        "–ë–µ–ª—ã–º –ª–æ—Ç–æ—Å–æ–º ‚Äî —Å–ø–æ–∫–æ–π–Ω–æ–π –∏ –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ–π.",
      ],
    },
    {
      question: "–í—ã –æ–±–ª–∞–¥–∞–µ—Ç–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–µ–π, –Ω–∞ —è–∑—ã–∫–µ —Ü–≤–µ—Ç–æ–≤, –≤—ã –±—ã–ª–∏ –±—ã?",
      options: [
        "–õ–∞–≤–∞–Ω–¥–æ–π ‚Äî –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç –≤–µ—á–Ω–æ—Å—Ç—å, —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ –ø–æ–∫–æ–π.",
        "–ü–∏–æ–Ω–æ–º ‚Äî —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç –±–æ–≥–∞—Ç—Å—Ç–≤–æ, —Ö—Ä–∞–±—Ä–æ—Å—Ç—å –∏ —á–µ—Å—Ç—å.",
      ],
    },
    {
      question: "–í—ã ‚Äî –ª–∏–¥–µ—Ä –ø–æ –Ω–∞—Ç—É—Ä–µ, –∫–∞–∫–∏–º –±—ã —Ü–≤–µ—Ç–∫–æ–º –≤—ã —Å–µ–±—è –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–ª–∏?",
      options: [
        "–ö—Ä–∞—Å–Ω–æ–π —Ä–æ–∑–æ–π ‚Äî —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Å—Ç—å, —Å–∏–ª—É –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.",
        "–ß—ë—Ä–Ω–æ–π –æ—Ä—Ö–∏–¥–µ–µ–π ‚Äî –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å, —Å—Ç–æ–π–∫–æ—Å—Ç—å –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, —á—Ç–æ –ø—Ä–∏—Å—É—â–µ —É–≤–µ—Ä–µ–Ω–Ω—ã–º –∏ —Å–∏–ª—å–Ω—ã–º –ª–∏–¥–µ—Ä–∞–º.",
      ],
    },
    {
      question: "–í—ã ‚Äî –æ—á–µ–Ω—å —è—Ä–∫–∞—è –ª–∏—á–Ω–æ—Å—Ç—å, –∫–∞–∫–∏–º –±—ã —Ü–≤–µ—Ç–∫–æ–º –≤—ã —Å–µ–±—è –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–ª–∏?",
      options: [
        "–ê–ª–æ–π —Ä–æ–∑–æ–π ‚Äî —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Å—Ç—å, —ç–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å –∏ —Å–∏–ª—É.",
        "–û—Ä–∞–Ω–∂–µ–≤—ã–º —Ç—é–ª—å–ø–∞–Ω–æ–º ‚Äî –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç —Ä–∞–¥–æ—Å—Ç—å, –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –æ–ø—Ç–∏–º–∏–∑–º, –≤—Å–µ–≥–¥–∞ –∏–∑–ª—É—á–∞—è —Ç–µ–ø–ª–æ –∏ —ç–Ω—Ç—É–∑–∏–∞–∑–º.",
      ],
    },
    {
      question: "–í—ã ‚Äî –æ—á–µ–Ω—å –¥–æ–±—Ä—ã–π —á–µ–ª–æ–≤–µ–∫, –∫–∞–∫–∏–º –±—ã —Ü–≤–µ—Ç–∫–æ–º –≤—ã —Å–µ–±—è –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–ª–∏?",
      options: [
        "–ë–µ–ª–æ–π –ª–∏–ª–∏–µ–π ‚Äî —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —á–∏—Å—Ç–æ—Ç—É, –¥–æ–±—Ä–æ—Ç—É –∏ –º–∏—Ä.",
        "–õ–∞–≤–∞–Ω–¥–æ–π ‚Äî –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —Å –º—è–≥–∫–æ—Å—Ç—å—é, —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ–º –∏ —É–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ–º.",
      ],
    },
    {
      question: "–í—ã ‚Äî –æ—á–µ–Ω—å –ø–æ—Ä—è–¥–æ—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∫–∞–∫–∏–º –±—ã —Ü–≤–µ—Ç–∫–æ–º –≤—ã —Å–µ–±—è –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–ª–∏?",
      options: [
        "–ë–µ–ª–æ–π —Ä–æ–∑–æ–π ‚Äî —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —á–µ—Å—Ç–Ω–æ—Å—Ç—å, —á–∏—Å—Ç–æ—Ç—É –∏ –ø–æ—Ä—è–¥–æ—á–Ω–æ—Å—Ç—å, –æ—Ç—Ä–∞–∂–∞—è —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏ –∏ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É.",
        "–¢—é–ª—å–ø–∞–Ω–æ–º ‚Äî –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —Å –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å—é –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å—é, –≤—Å–µ–≥–¥–∞ —Å—Ç–æ—è –Ω–∞ —Å—Ç—Ä–∞–∂–µ —Å–≤–æ–∏—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π.",
      ],
    },
  ],
};

// Personality Interpretations (same for both genders)
const personalityInterpretations = {
  female: {
    charisma: {
      title: "–•–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω–∞—è –õ–∏—á–Ω–æ—Å—Ç—å üåπ",
      description:
        "–í—ã ‚Äî —Ö–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å —Å —è—Ä–∫–æ–π —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –æ–∫—Ä—É–∂–∞—é—â–∏—Ö.",
    },
    ladyboss: {
      title: "LadyBoss üå∫",
      description:
        "–í—ã ‚Äî –ª–∏–¥–µ—Ä –∏ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª—å. –í–∞—à–∏ –∫–∞—á–µ—Å—Ç–≤–∞ ‚Äî —Å–∏–ª–∞, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ —É–º–µ–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç—å —Å –≥—Ä–∞—Ü–∏–µ–π –∏ —Å—Ç—Ä–∞—Å—Ç—å—é.",
    },
    sensual: {
      title: "–ß—É–≤—Å—Ç–≤–µ–Ω–Ω–∞—è –î—É—à–∞ üå∏",
      description:
        "–í—ã ‚Äî —á—É–≤—Å—Ç–≤–µ–Ω–Ω–∞—è –∏ —É—Ç–æ–Ω—á—ë–Ω–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –∏–∑–ª—É—á–∞–µ—Ç —Ç–µ–ø–ª–æ, —ç–º–æ—Ü–∏–∏ –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å.",
    },
    gentle: {
      title: "–ù–µ–∂–Ω–∞—è –ù–∞—Ç—É—Ä–∞ üíÆ",
      description:
        "–í—ã ‚Äî —É—Ç–æ–Ω—á—ë–Ω–Ω–∞—è –∏ –∑–∞–±–æ—Ç–ª–∏–≤–∞—è –ª–∏—á–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –∏–∑–ª—É—á–∞–µ—Ç —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ, –¥–æ–±—Ä–æ—Ç—É –∏ –º—è–≥–∫–æ—Å—Ç—å.",
    },
    merciful: {
      title: "–ú–∏–ª–æ—Å–µ—Ä–¥–Ω–æ–µ –°–µ—Ä–¥—Ü–µ ü§ç",
      description:
        "–í—ã ‚Äî —á–µ–ª–æ–≤–µ–∫ —Å –±–æ–ª—å—à–∏–º —Å–µ—Ä–¥—Ü–µ–º, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç—Ä–µ–º–∏—Ç—Å—è –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º, –¥–∞—Ä—è —É—Ç–µ—à–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
    },
  },
  male: {
    charisma: {
      title: "–•–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω—ã–π –õ–∏–¥–µ—Ä üíº",
      description:
        "–í—ã ‚Äî –ø—Ä–∏—Ä–æ–∂–¥—ë–Ω–Ω—ã–π –ª–∏–¥–µ—Ä —Å —Ö–∞—Ä–∏–∑–º–æ–π, –∫–æ—Ç–æ—Ä–∞—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –æ–∫—Ä—É–∂–∞—é—â–∏—Ö –∏ –ø–æ–±—É–∂–¥–∞–µ—Ç –∏—Ö —Å–ª–µ–¥–æ–≤–∞—Ç—å –∑–∞ –≤–∞–º–∏.",
    },
    leader: {
      title: "–£–≤–µ—Ä–µ–Ω–Ω—ã–π –õ–∏–¥–µ—Ä üí™",
      description:
        "–í—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Å–ø–æ—Å–æ–±–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, —Å–æ—á–µ—Ç–∞—è —Å–∏–ª—É –∏ –ø—Ä–æ–Ω–∏—Ü–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.",
    },
    harmony: {
      title: "–ì–∞—Ä–º–æ–Ω–∏—á–Ω–∞—è –õ–∏—á–Ω–æ—Å—Ç—å üßò",
      description:
        "–í—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ü–µ–Ω–∏—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –≥–∞—Ä–º–æ–Ω–∏—é –∏ –±–∞–ª–∞–Ω—Å, —Å–æ–∑–¥–∞–≤–∞—è –≤–æ–∫—Ä—É–≥ —Å–µ–±—è —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ —É—é—Ç.",
    },
    vibrant: {
      title: "–Ø—Ä–∫–∞—è –õ–∏—á–Ω–æ—Å—Ç—å üî•",
      description:
        "–í—ã ‚Äî —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π –∏ —Å—Ç—Ä–∞—Å—Ç–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–ª—É—á–∞–µ—Ç —Å–∏–ª—É –∏ –ø–æ–∑–∏—Ç–∏–≤, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—è –æ–∫—Ä—É–∂–∞—é—â–∏—Ö.",
    },
    kind: {
      title: "–î–æ–±—Ä–∞—è –î—É—à–∞ üå±",
      description:
        "–í—ã ‚Äî —á–µ–ª–æ–≤–µ–∫ —Å —Ç—ë–ø–ª—ã–º —Å–µ—Ä–¥—Ü–µ–º, –≥–æ—Ç–æ–≤—ã–π –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∏ –ø–æ–º–æ–≥–∞—Ç—å, –∏–∑–ª—É—á–∞—è –¥–æ–±—Ä–æ—Ç—É –∏ –º–∏—Ä.",
    },
    honorable: {
      title: "–ü–æ—Ä—è–¥–æ—á–Ω—ã–π –ß–µ–ª–æ–≤–µ–∫ üõ°Ô∏è",
      description:
        "–í—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ü–µ–Ω–∏—Ç —á–µ—Å—Ç–Ω–æ—Å—Ç—å, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å –∏ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ, –æ—Å—Ç–∞–≤–∞—è—Å—å –≤–µ—Ä–Ω—ã–º —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º.",
    },
  },
};


export const FlowerPersonalityQuiz = ({ gender }) => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [selectedAnswers, setSelectedAnswers] = useState([]);
  const [showResult, setShowResult] = useState(false);

  const handleAnswerSelect = (answer) => {
    const newSelectedAnswers = [...selectedAnswers];
    newSelectedAnswers[currentQuestion] = answer;
    setSelectedAnswers(newSelectedAnswers);

    if (currentQuestion + 1 < questions[gender].length) {
      setCurrentQuestion(currentQuestion + 1);
    } else {
      setShowResult(true);
    }
  };

  const handlePreviousQuestion = () => {
    if (currentQuestion > 0) {
      setCurrentQuestion(currentQuestion - 1);
    }
  };

  const resetQuiz = () => {
    setCurrentQuestion(0);
    setSelectedAnswers([]);
    setShowResult(false);
  };

  const determinePersonality = (gender) => {
    const traits = Object.keys(personalityInterpretations[gender]); // Get traits for the selected gender
    const randomTrait = traits[Math.floor(Math.random() * traits.length)]; // Pick a random trait
    return personalityInterpretations[gender][randomTrait]; // Return the corresponding interpretation
  };
  

  const currentQuizQuestion = questions[gender][currentQuestion];
  const getGenderStyles = (gender) => {
    if (gender === "male") {
      return {
        gradientFrom: "from-blue-100",
        gradientTo: "to-green-100",
        borderColor: "border-blue-200",
        headerGradientFrom: "from-blue-200",
        headerGradientTo: "to-green-200",
        buttonHoverFrom: "hover:from-blue-600",
        buttonHoverTo: "hover:to-green-600",
        // answerBoxBg: "bg-blue-500", // Background for answer boxes
      };
    }
    // Default to female styles
    return {
      gradientFrom: "from-pink-100",
      gradientTo: "to-purple-100",
      borderColor: "border-pink-200",
      headerGradientFrom: "from-pink-200",
      headerGradientTo: "to-purple-200",
      buttonHoverFrom: "hover:from-pink-600",
      buttonHoverTo: "hover:to-purple-600",
      // answerBoxBg: "bg-pink-50", // Background for answer boxes
    };
  };
  
  const genderStyles = getGenderStyles(gender);
  return showResult ? (
    <div
      className={` flex items-center justify-center  ${fontFamily}`}
    >
      <Card className={`w-full max-w-md shadow-2xl border-2 ${genderStyles.borderColor}`}>
        <CardHeader className={`bg-gradient-to-r justify-center text-center flex p-1 rounded-2xl ${genderStyles.headerGradientFrom} ${genderStyles.headerGradientTo} text-center`}>
          <CardTitle className="text-1xl  font-bold text-black">
            {determinePersonality(gender).title}
          </CardTitle>
        </CardHeader>
        <CardContent className="p-6 bg-white">
          <p className="text-1xl text-gray-700 mb-4 leading-relaxed">
            {determinePersonality(gender).description}
          </p>
        </CardContent>
        <CardFooter className="p-4">
          <Button
            onClick={resetQuiz}
            className={`w-full flex items-center justify-center bg-gradient-to-r ${genderStyles.headerGradientFrom} ${genderStyles.headerGradientTo} ${genderStyles.buttonHoverFrom} ${genderStyles.buttonHoverTo} text-black`}
          >
            <FaRedoAlt className="mr-2" /> –ü—Ä–æ–π—Ç–∏ –∫–≤–∏–∑ —Å–Ω–æ–≤–∞
          </Button>
        </CardFooter>
      </Card>
    </div>
  ) : (
    <div className={`flex items-center  justify-center  ${fontFamily}`}>
      <Card className={`w-full max-w-md shadow-2xl border-2 ${genderStyles.borderColor}`}>
        <div className="flex items-center justify-between mb-4">
          {questions[gender].map((_, index) => (
            <div
              key={index}
              className={`flex-1 h-2 mx-1 rounded-full transition-all duration-500 ${
                index <= currentQuestion
                  ? `bg-gradient-to-r ${genderStyles.headerGradientFrom} ${genderStyles.headerGradientTo}`
                  : "bg-gray-300"
              }`}
              style={{
                transform: index === currentQuestion ? "scale(1.2)" : "scale(1)",
              }}
            ></div>
          ))}
        </div>
  
        <CardHeader className={`bg-gradient-to-r rounded-2xl ${genderStyles.headerGradientFrom} ${genderStyles.headerGradientTo} text-center`}>
          <CardTitle className="text-1xl font-bold text-gray-800">
            –ö–≤–∏–∑: –í–∞—à–∞ –ª–∏—á–Ω–æ—Å—Ç—å ‚Äî —Ü–≤–µ—Ç–æ–∫
          </CardTitle>
        </CardHeader>
  
        <CardContent className={` ${genderStyles.answerBoxBg}`}>
          <div className="mb-4 bg-white">
            <p className="text-1xl font-semibold mb-6 text-gray-800 text-center">
              {currentQuizQuestion.question}
            </p>
            {currentQuizQuestion.options.map((option) => (
            <Button
              key={option}
              onClick={() => handleAnswerSelect(option)}
              gender={gender}
              className={`w-full mb-4 text-left text-black whitespace-normal border-2 bg-white  hover:${genderStyles.gradientFrom} transition-all duration-300 text-md`}
            >
              {option}
            </Button>
          ))}
          </div>
          <div className="flex justify-center mt-4">
            <Button
              onClick={handlePreviousQuestion}
              disabled={currentQuestion === 0}
              className={`flex items-center justify-center bg-gradient-to-r ${genderStyles.headerGradientFrom} ${genderStyles.headerGradientTo} ${genderStyles.buttonHoverFrom} ${genderStyles.buttonHoverTo} text-black`}
            >
              <FaArrowLeft className="mr-2" /> –ù–∞–∑–∞–¥
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};
